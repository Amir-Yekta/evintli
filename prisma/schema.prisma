// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Models: User, Listing, Service, Schedule, Booking
enum UserRole {
  CUSTOMER
  SELLER
  ADMIN
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  name      String?
  role      UserRole   @default(CUSTOMER) // Default role is CUSTOMER
  createdAt DateTime   @default(now())

  listings  Listing[] // one-to-many relationship with Listing (changed from 'listing' to 'listings' for clarity)
  schedules Schedule[] // User can have multiple schedules
}

// adding other models: listing, schedule, booking, photo

model Listing {
  id           String  @id @default(uuid())
  userId       String
  name         String
  event_type   String?
  cuisine_type String?
  capacity     Int?
  description  String?
  floor_price  Float?
  roof_price   Float?
  photos       Photo[] // array of photos (changed from 'photo' to 'photos' for clarity)

  createdAt DateTime   @default(now())

  user      User       @relation(fields: [userId], references: [id])
  schedules Schedule[] // Listing can have multiple schedules
}

model Schedule {
  id        String  @id @default(uuid())
  userId    String
  listingId String
  date      DateTime
  notes     String?

  user    User      @relation(fields: [userId], references: [id])
  listing Listing   @relation(fields: [listingId], references: [id])
}

model Photo {
  id        String  @id @default(uuid())
  url       String
  listingId String

  listing Listing   @relation(fields: [listingId], references: [id])
}
